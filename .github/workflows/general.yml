name: rust
on:
  - push
  - pull_request

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.6.2

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: cache dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: cache sqlx-cli
        uses: actions/cache@v3
        id: cache-sqlx-cli
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}
      - name: install sqlx-cli
        if: steps.cache-sqlx-cli.outputs.cache-hit == false
        run: >
          cargo install sqlx-cli 
          --force
          --version=${{ env.SQLX_VERSION }}
          --locked
          --no-default-features
          --features rustls,postgres
      - name: install protoc
        uses: arduino/setup-protoc@v1
      - name: migrate database
        run: sqlx database reset -y
      - name: running test
        run: cargo test
    services:
      postgres-db:
        image: postgres:14-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: cache dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: cache sqlx-cli
        uses: actions/cache@v3
        id: cache-sqlx-cli
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}
      - name: install sqlx-cli
        if: steps.cache-sqlx-cli.outputs.cache-hit == false
        run: >
          cargo install sqlx-cli 
          --force
          --version=${{ env.SQLX_VERSION }}
          --locked
          --no-default-features
          --features rustls,postgres
      - name: install protoc
        uses: arduino/setup-protoc@v1
      - name: migrate database
        run: sqlx database reset -y
      - name: check if code is formatted correctly
        run: cargo fmt --all -- --check
      - name: static analysis
        run: cargo clippy -- -D warnings
    services:
      postgres-db:
        image: postgres:14-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
